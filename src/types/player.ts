// üéØ TIPOS UNIFICADOS DE JUGADOR
// ‚úÖ PROP√ìSITO: Definir UN SOLO tipo de jugador para toda la aplicaci√≥n
// ‚úÖ BENEFICIO: Elimina confusi√≥n entre diferentes interfaces de jugador
// ‚úÖ REEMPLAZA: Las interfaces duplicadas Jugador vs Player

// üë§ INTERFACE PRINCIPAL DEL JUGADOR
// Esta es la √∫nica interface que debe usarse en toda la aplicaci√≥n
export interface Player {
  // üÜî IDENTIFICACI√ìN √öNICA
  id_player: string              // ID √∫nico en la base de datos (OBLIGATORIO)
  player_name: string            // Nombre principal del jugador (OBLIGATORIO)
  complete_player_name?: string  // Nombre completo si es diferente (OPCIONAL)
  
  // üë§ INFORMACI√ìN PERSONAL B√ÅSICA
  date_of_birth?: string         // Fecha de nacimiento original (formato: "YYYY-MM-DD")
  correct_date_of_birth?: string // Fecha corregida si la original era incorrecta
  age?: number                   // Edad calculada autom√°ticamente (16-50 a√±os t√≠picamente)
  nationality_1?: string         // Nacionalidad principal (ej: "Espa√±a", "Argentina")
  nationality_2?: string         // Segunda nacionalidad si la tiene (para jugadores binacionales)
  
  // üèÉ‚Äç‚ôÇÔ∏è ATRIBUTOS F√çSICOS Y T√âCNICOS
  height?: number                // Altura en cent√≠metros (ej: 180)
  foot?: string                  // Pie dominante ("Left", "Right", "Both")
  position_player?: string       // Posici√≥n en el campo ("CF", "CM", "CB", "GK", etc.)
  correct_position_player?: string // Posici√≥n corregida si la original era incorrecta
  
  // ‚öΩ INFORMACI√ìN DEL EQUIPO ACTUAL
  team_name?: string             // Nombre del equipo actual (ej: "FC Barcelona")
  correct_team_name?: string     // Nombre corregido del equipo
  team_country?: string          // Pa√≠s del equipo (ej: "Espa√±a")
  team_competition?: string      // Liga o competici√≥n donde juega (ej: "La Liga")
  competition_country?: string   // Pa√≠s de la competici√≥n
  
  // üìä M√âTRICAS DE RENDIMIENTO
  player_rating?: number         // Valoraci√≥n del jugador (0-100, donde 100 es el mejor)
  player_rating_norm?: number    // Rating normalizado para comparaciones
  player_elo?: number           // Sistema ELO de ranking (como en ajedrez)
  player_ranking?: number       // Posici√≥n en ranking global (1 = mejor del mundo)
  community_potential?: number   // Potencial evaluado por la comunidad
  
  // üí∞ INFORMACI√ìN ECON√ìMICA
  player_trfm_value?: number     // Valor de mercado en Transfermarkt
  player_trfm_value_norm?: number // Valor normalizado
  
  // üìÑ DETALLES CONTRACTUALES
  contract_end?: string         // Fecha de fin de contrato (formato: "YYYY-MM-DD")
  correct_contract_end?: string // Fecha corregida del contrato
  on_loan?: boolean            // Si est√° cedido (true) o no (false)
  agency?: string              // Agencia que lo representa
  correct_agency?: string      // Agencia corregida
  
  // üîó ENLACES Y RECURSOS
  url_trfm?: string            // URL de Transfermarkt
  url_trfm_advisor?: string    // URL de TM Advisor
  url_secondary?: string       // URL secundaria
  url_instagram?: string       // Perfil de Instagram
  video?: string               // URL de video destacado
  photo_coverage?: string      // Cobertura de fotos disponibles
  
  // üïí METADATOS DEL SISTEMA
  createdAt: string            // Cu√°ndo se a√±adi√≥ a la base de datos (ISO string)
  updatedAt: string            // √öltima vez que se actualiz√≥ (ISO string)
}

// üîç FILTROS PARA B√öSQUEDA DE JUGADORES
// ‚úÖ PROP√ìSITO: Permitir b√∫squedas espec√≠ficas y filtrado avanzado
// ‚úÖ BENEFICIO: Los usuarios pueden encontrar exactamente lo que buscan
export interface PlayerFilters {
  player_name?: string      // Buscar por nombre (ej: "Messi", "Cristiano")
  position_player?: string  // Filtrar por posici√≥n (ej: "CF", "CM", "CB")
  team_name?: string       // Filtrar por equipo (ej: "Barcelona", "Real Madrid")
  nationality_1?: string   // Filtrar por nacionalidad (ej: "Argentina", "Portugal")
  min_age?: number        // Edad m√≠nima (ej: 18 para mayores de edad)
  max_age?: number        // Edad m√°xima (ej: 25 para j√≥venes promesas)
  min_rating?: number     // Rating m√≠nimo (ej: 80 para jugadores de √©lite)
  max_rating?: number     // Rating m√°ximo (ej: 95 para filtrar rangos)
  on_loan?: boolean       // Solo jugadores cedidos (true) o no cedidos (false)
}

// ‚öôÔ∏è OPCIONES DE B√öSQUEDA Y ORDENAMIENTO
// ‚úÖ PROP√ìSITO: Control total sobre c√≥mo se muestran los resultados
// ‚úÖ BENEFICIO: Paginaci√≥n eficiente, ordenamiento flexible
export interface PlayerSearchOptions {
  page?: number              // Qu√© p√°gina queremos (ej: 1, 2, 3...) - por defecto: 1
  limit?: number            // Cu√°ntos jugadores por p√°gina (ej: 20, 50) - por defecto: 20
  sortBy?: keyof Player     // Por qu√© campo ordenar (ej: "player_rating", "age")
  sortOrder?: 'asc' | 'desc' // Orden ascendente (A-Z, 1-10) o descendente (Z-A, 10-1)
  filters?: PlayerFilters   // Filtros a aplicar (definidos arriba)
}

// üìã RESULTADO DE B√öSQUEDA COMPLETO
// ‚úÖ PROP√ìSITO: Informaci√≥n completa para mostrar paginaci√≥n en la UI
// ‚úÖ BENEFICIO: Frontend sabe exactamente c√≥mo mostrar navegaci√≥n
export interface PlayerSearchResult {
  players: Player[]         // Array con los jugadores encontrados
  pagination: {
    page: number           // P√°gina actual que se est√° mostrando
    limit: number          // Jugadores por p√°gina configurados
    total: number          // Total de jugadores que cumplen los filtros
    totalPages: number     // Total de p√°ginas disponibles (total √∑ limit)
    hasNext: boolean       // Si hay p√°gina siguiente (para bot√≥n "Siguiente")
    hasPrev: boolean       // Si hay p√°gina anterior (para bot√≥n "Anterior")
  }
}

// üìä ESTAD√çSTICAS GENERALES DE JUGADORES
// ‚úÖ PROP√ìSITO: Datos para dashboards y an√°lisis
// ‚úÖ BENEFICIO: M√©tricas √∫tiles para administradores
export interface PlayerStats {
  totalPlayers: number                    // Total de jugadores en la base de datos
  averageRating: number | null           // Rating promedio de todos los jugadores
  playersByPosition: Array<{             // Distribuci√≥n por posiciones
    position_player: string              // Nombre de la posici√≥n
    _count: { position_player: number }  // Cantidad de jugadores en esa posici√≥n
  }>
  playersByNationality: Array<{          // Top 10 nacionalidades m√°s representadas
    nationality_1: string               // Nombre del pa√≠s
    _count: { nationality_1: number }   // Cantidad de jugadores de ese pa√≠s
  }>
  topRatedPlayers: Array<{              // Top 10 jugadores mejor valorados
    id_player: string                   // ID del jugador
    player_name: string                 // Nombre del jugador
    player_rating: number | null       // Su rating
    team_name: string | null           // Su equipo actual
    position_player: string | null     // Su posici√≥n
  }>
}

// üîß OPCIONES DISPONIBLES PARA FILTROS
// ‚úÖ PROP√ìSITO: Llenar dropdowns autom√°ticamente con datos reales
// ‚úÖ BENEFICIO: UI din√°mica que se actualiza con nuevos datos
export interface FilterOptions {
  positions: Array<{          // Todas las posiciones disponibles
    value: string            // C√≥digo de la posici√≥n (ej: "CF")
    label: string           // Nombre legible (ej: "Centro Delantero")
    count: number           // Cu√°ntos jugadores tienen esta posici√≥n
  }>
  nationalities: Array<{     // Todas las nacionalidades disponibles
    value: string           // C√≥digo del pa√≠s (ej: "ES")
    label: string          // Nombre del pa√≠s (ej: "Espa√±a")
    count: number          // Cu√°ntos jugadores de esta nacionalidad
  }>
  teams: Array<{            // Todos los equipos disponibles
    value: string          // Nombre del equipo
    label: string         // Nombre para mostrar
    count: number         // Cu√°ntos jugadores en este equipo
  }>
  competitions: Array<{     // Todas las competiciones disponibles
    value: string          // Nombre de la competici√≥n
    label: string         // Nombre para mostrar
    count: number         // Cu√°ntos jugadores en esta competici√≥n
  }>
}

// üìù DATOS PARA CREAR UN NUEVO JUGADOR
// ‚úÖ PROP√ìSITO: Validar datos al crear jugadores
// ‚úÖ BENEFICIO: Solo campos necesarios, validaci√≥n clara
export interface CreatePlayerData {
  // CAMPOS OBLIGATORIOS
  player_name: string                    // Nombre del jugador (m√≠nimo 2 caracteres)
  
  // CAMPOS OPCIONALES (pueden omitirse al crear)
  complete_player_name?: string
  date_of_birth?: Date
  age?: number
  position_player?: string
  foot?: string
  height?: number
  nationality_1?: string
  nationality_2?: string
  team_name?: string
  team_country?: string
  team_competition?: string
  player_rating?: number
  contract_end?: Date
  on_loan?: boolean
  agency?: string
  url_trfm?: string
  url_instagram?: string
  // ... otros campos opcionales seg√∫n necesidad
}

// ‚úèÔ∏è DATOS PARA ACTUALIZAR UN JUGADOR EXISTENTE
// ‚úÖ PROP√ìSITO: Permitir actualizaciones parciales
// ‚úÖ BENEFICIO: Solo enviar campos que realmente cambiaron
export interface UpdatePlayerData extends Partial<CreatePlayerData> {
  // Todos los campos son opcionales para actualizaciones
  // Se pueden actualizar solo los campos que han cambiaron
  id_player?: never // No se puede actualizar el ID
}

// üè∑Ô∏è TIPOS DE UTILIDAD PARA DESARROLLO
// ‚úÖ PROP√ìSITO: Facilitar el trabajo con tipos en TypeScript
export type PlayerSortableFields = keyof Pick<Player, 
  'player_name' | 'age' | 'player_rating' | 'createdAt' | 'team_name'
>

export type PlayerRequiredFields = Pick<Player, 'id_player' | 'player_name' | 'createdAt' | 'updatedAt'>

// üìù DATOS PARA CREAR JUGADOR (FORMATO LEGACY)
// ‚úÖ PROP√ìSITO: Compatibilidad con formularios existentes
export interface CrearJugadorData {
  nombre: string                         // Nombre del jugador (obligatorio)
  nombreUsuario: string                  // Username √∫nico (obligatorio)
  posicion: string                       // Posici√≥n en el campo (obligatorio)
  edad: number                          // Edad del jugador (16-50)
  equipo: string                        // Equipo actual (obligatorio)
  numeroCamiseta?: number               // N√∫mero de camiseta (1-99, opcional)
  biografia?: string                    // Biograf√≠a del jugador (opcional)
  valoracion?: string                   // Valoraci√≥n de mercado (opcional)
  urlAvatar?: string                    // URL de la imagen (opcional)
  atributos?: Array<{                   // Atributos personalizados (opcional)
    nombre: string                      // Nombre del atributo
    valor: string                       // Valor del atributo
  }>
}

// üì§ EXPORTACIONES ADICIONALES
// Re-exportar todo para f√°cil importaci√≥n desde otros archivos
export default Player